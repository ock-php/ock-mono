name: CI Packages

on:
  - push

jobs:
  tests:
    name: Package tests
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        package:
          # Packages without tests are commented out.
          - adaptism
          - class-discovery
          - class-files-iterator
          - codegen-tools
          - dependency-injection
          # - di-discovery
          # - egg
          - helpers
          - object-construction-kit
          - reflection
          - testing
        php: [8.3]
        composer-flags: ['', '--prefer-lowest']

    defaults:
      run:
        working-directory: packages/${{ matrix.package }}

    steps:
      - uses: actions/checkout@v4

      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          # @todo Review which extensions are needed.
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd
          coverage: pcov

      - name: Add repositories for monorepo packages
        run: |
          set -x
          php --version
          composer config --merge --json repositories.0 '{"type": "path", "url": "../*", "options": {"versions": {"*": "self.version"}}}'

      - run: composer update --no-install ${{ matrix.composer-flags }}

      - run: composer install --no-interaction

      - name: PhpStan
        run: |
          set -x
          if [ -f phpstan.neon ]; then
            cp composer.json composer.json.bak
            cp composer.lock composer.lock.bak
            # Install phpstan packages that are required by drupal/core-dev.
            # This is needed so that phpstan has the same result if it is run
            # from the top level.
            composer config --no-plugins allow-plugins.phpstan/extension-installer true
            composer require --dev phpstan/phpstan:^1 phpstan/extension-installer:^1 phpstan/phpstan-deprecation-rules:^1
            rm composer.json composer.lock
            mv composer.json.bak composer.json
            mv composer.lock.bak composer.lock
            ./vendor/bin/phpstan -v
            composer remove --dev phpstan/phpstan
          fi

      - run: vendor/bin/phpunit
